name: Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 6 AM UTC
    - cron: '0 6 * * 1'
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"
  NODE_VERSION: "18"

permissions:
  contents: write
  pull-requests: write

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install Python Tools
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools
      
      - name: Update Python Dependencies
        run: |
          # Update requirements.txt from requirements.in if it exists
          if [ -f requirements.in ]; then
            pip-compile --upgrade requirements.in
          fi
          
          # Update dev requirements
          if [ -f requirements-dev.in ]; then
            pip-compile --upgrade requirements-dev.in
          fi
      
      - name: Update Node.js Dependencies
        run: |
          npm update
          npm audit fix --audit-level moderate
      
      - name: Run Tests with Updated Dependencies
        run: |
          pip install -r requirements-dev.txt
          npm ci
          
          # Run core tests to ensure updates don't break functionality
          pytest tests/unit/ -x --tb=short
          npm run test:frontend -- --passWithNoTests
      
      - name: Check for Security Vulnerabilities
        run: |
          pip install safety
          safety check --json --output safety-report.json
          npm audit --audit-level high
        continue-on-error: true
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: '🔄 Weekly Dependency Updates'
          body: |
            ## 🔄 Automated Dependency Updates
            
            This PR contains automated dependency updates for both Python and Node.js packages.
            
            ### Changes Made:
            - ⬆️ Updated Python dependencies to latest compatible versions
            - ⬆️ Updated Node.js dependencies to latest compatible versions
            - 🔍 Applied security patches where available
            
            ### Testing:
            - ✅ Core unit tests passed
            - ✅ Frontend tests passed
            - 🔒 Security scan completed (see artifacts)
            
            ### Review Checklist:
            - [ ] Review dependency changes for breaking changes
            - [ ] Verify all tests pass in CI
            - [ ] Check security scan results
            - [ ] Ensure no critical vulnerabilities introduced
            
            **Auto-generated by GitHub Actions** 🤖
          branch: chore/dependency-updates
          labels: |
            dependencies
            automated
            chore
          reviewers: |
            ${{ github.repository_owner }}

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm ci
      
      - name: Python Security Audit
        run: |
          pip install safety pip-audit
          safety check --json --output python-security-audit.json
          pip-audit --format=json --output=pip-audit-results.json
        continue-on-error: true
      
      - name: Node.js Security Audit
        run: |
          npm audit --audit-level=moderate --json > nodejs-security-audit.json
        continue-on-error: true
      
      - name: Generate Security Report
        run: |
          echo "# Weekly Security Audit Report - $(date)" > security-audit-report.md
          echo "" >> security-audit-report.md
          echo "## Python Dependencies" >> security-audit-report.md
          
          if [ -f python-security-audit.json ]; then
            vuln_count=$(jq '.vulnerabilities | length' python-security-audit.json 2>/dev/null || echo "0")
            echo "- Vulnerabilities found: $vuln_count" >> security-audit-report.md
          fi
          
          echo "" >> security-audit-report.md
          echo "## Node.js Dependencies" >> security-audit-report.md
          
          if [ -f nodejs-security-audit.json ]; then
            vuln_count=$(jq '.metadata.vulnerabilities.total' nodejs-security-audit.json 2>/dev/null || echo "0")
            echo "- Vulnerabilities found: $vuln_count" >> security-audit-report.md
          fi
          
          echo "" >> security-audit-report.md
          echo "**Generated on:** $(date)" >> security-audit-report.md
      
      - name: Upload Security Audit Results
        uses: actions/upload-artifact@v3
        with:
          name: security-audit-results
          path: |
            python-security-audit.json
            pip-audit-results.json
            nodejs-security-audit.json
            security-audit-report.md
      
      - name: Create Security Issue if Vulnerabilities Found
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const fs = require('fs');
            
            let pythonVulns = 0;
            let nodeVulns = 0;
            
            try {
              if (fs.existsSync('python-security-audit.json')) {
                const pythonAudit = JSON.parse(fs.readFileSync('python-security-audit.json', 'utf8'));
                pythonVulns = pythonAudit.vulnerabilities ? pythonAudit.vulnerabilities.length : 0;
              }
            } catch (e) {
              console.log('Could not parse Python audit results');
            }
            
            try {
              if (fs.existsSync('nodejs-security-audit.json')) {
                const nodeAudit = JSON.parse(fs.readFileSync('nodejs-security-audit.json', 'utf8'));
                nodeVulns = nodeAudit.metadata ? nodeAudit.metadata.vulnerabilities.total : 0;
              }
            } catch (e) {
              console.log('Could not parse Node.js audit results');
            }
            
            const totalVulns = pythonVulns + nodeVulns;
            
            if (totalVulns > 0) {
              const issueBody = `## 🚨 Security Vulnerabilities Detected
              
              Our weekly security audit has detected ${totalVulns} vulnerabilities in our dependencies:
              
              - **Python dependencies**: ${pythonVulns} vulnerabilities
              - **Node.js dependencies**: ${nodeVulns} vulnerabilities
              
              ### Action Required:
              1. Review the security audit artifacts in the latest workflow run
              2. Update vulnerable dependencies to patched versions
              3. If no patches are available, consider alternative packages
              4. Document any accepted risks with justification
              
              **Generated by:** Weekly Security Audit
              **Date:** ${new Date().toISOString().split('T')[0]}
              
              See the [workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId}) for detailed results.`;
              
              github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `🚨 Security Vulnerabilities Detected - ${new Date().toISOString().split('T')[0]}`,
                body: issueBody,
                labels: ['security', 'vulnerability', 'automated']
              });
            }