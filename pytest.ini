[tool:pytest]
# Pytest configuration for AI Hardware Co-Design Playground
# See: https://docs.pytest.org/en/stable/reference/reference.html#configuration-file-formats

# Minimum version
minversion = 7.0

# Test discovery
testpaths = tests backend/tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --strict-markers
    --disable-warnings
    --tb=short
    --maxfail=10
    --show-capture=no
    --import-mode=importlib
    -ra
    -q

# Coverage options (if pytest-cov is installed)
# addopts = --cov=backend/codesign_playground --cov-report=html --cov-report=term-missing --cov-fail-under=80

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    e2e: marks tests as end-to-end tests
    api: marks tests as API tests
    database: marks tests requiring database
    hardware: marks tests requiring hardware simulation
    benchmark: marks tests as performance benchmarks
    security: marks tests for security validation
    smoke: marks tests as smoke tests for quick validation
    regression: marks tests for regression testing
    flaky: marks tests that are known to be flaky
    
# Warning filters
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ImportWarning
    ignore::ResourceWarning
    ignore:.*flask.*:DeprecationWarning
    ignore:.*pydantic.*:DeprecationWarning

# Test timeout (requires pytest-timeout)
timeout = 300
timeout_method = thread

# Parallel execution (requires pytest-xdist)
# Run with: pytest -n auto
# addopts = -n auto

# Live logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# File logging
log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Doctest options
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ELLIPSIS

# Mock configuration
mock_use_standalone_module = true

# Custom collection
collect_ignore = [
    "setup.py",
    "conftest.py",
    "build/",
    "dist/",
    ".tox/",
    ".eggs/",
    "*.egg",
    ".venv/",
    "venv/",
    "node_modules/",
]