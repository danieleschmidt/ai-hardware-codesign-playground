# AI Hardware Co-Design Playground Environment Variables
# Copy this file to .env and customize for your environment

# =============================================================================
# DEVELOPMENT ENVIRONMENT
# =============================================================================

# Development mode (enables debug features, verbose logging)
CODESIGN_PLAYGROUND_DEV=true

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Enable debug mode for specific components
DEBUG_SIMULATION=false
DEBUG_OPTIMIZATION=false
DEBUG_RTL_GENERATION=false

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Database URL for design storage and caching
# Examples:
#   SQLite: sqlite:///./codesign_playground.db
#   PostgreSQL: postgresql://user:password@localhost:5432/codesign_playground
#   MySQL: mysql://user:password@localhost:3306/codesign_playground
DATABASE_URL=sqlite:///./codesign_playground.db

# Redis URL for caching and job queues
# Examples:
#   Local: redis://localhost:6379/0
#   Remote: redis://username:password@hostname:port/database
REDIS_URL=redis://localhost:6379/0

# =============================================================================
# COMPUTE RESOURCES
# =============================================================================

# Maximum number of parallel simulation processes
MAX_PARALLEL_SIMULATIONS=4

# Maximum number of parallel optimization processes
MAX_PARALLEL_OPTIMIZATIONS=2

# Memory limit for individual simulations (in GB)
SIMULATION_MEMORY_LIMIT=8

# Temporary directory for large files
TEMP_DIR=/tmp/codesign_playground

# Enable distributed computing with Ray
ENABLE_RAY=false
RAY_ADDRESS=auto

# =============================================================================
# HARDWARE TOOL PATHS
# =============================================================================

# Verilator installation path
VERILATOR_ROOT=/usr/share/verilator

# Yosys installation path
YOSYS_PATH=/usr/bin/yosys

# Vivado installation path (if available)
VIVADO_PATH=/opt/Xilinx/Vivado/2023.2

# Quartus installation path (if available)
QUARTUS_PATH=/opt/intel/quartus

# OpenROAD installation path (if available)
OPENROAD_PATH=/usr/local/bin/openroad

# =============================================================================
# ML FRAMEWORK CONFIGURATION
# =============================================================================

# PyTorch device (cpu, cuda, mps)
TORCH_DEVICE=cpu

# TensorFlow device placement
TF_DEVICE_PLACEMENT=false

# ONNX runtime providers (CPUExecutionProvider, CUDAExecutionProvider)
ONNX_PROVIDERS=CPUExecutionProvider

# TVM target configuration
TVM_TARGET=llvm

# =============================================================================
# SIMULATION CONFIGURATION
# =============================================================================

# Default simulation backend (verilator, analytical, hybrid)
DEFAULT_SIMULATION_BACKEND=verilator

# Simulation timeout in seconds
SIMULATION_TIMEOUT=300

# Enable waveform dumping for debugging
ENABLE_WAVEFORM_DUMP=false

# Waveform dump directory
WAVEFORM_DIR=./waveforms

# =============================================================================
# OPTIMIZATION CONFIGURATION
# =============================================================================

# Default optimization algorithm (genetic, bayesian, gradient, random)
DEFAULT_OPTIMIZATION_ALGORITHM=bayesian

# Optimization timeout in seconds
OPTIMIZATION_TIMEOUT=3600

# Maximum number of optimization iterations
MAX_OPTIMIZATION_ITERATIONS=1000

# Convergence tolerance
OPTIMIZATION_TOLERANCE=1e-6

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Enable security scanning of generated RTL
ENABLE_SECURITY_SCANNING=false

# Sandbox untrusted code execution
ENABLE_SANDBOXING=true

# Maximum file size for uploads (in MB)
MAX_UPLOAD_SIZE=100

# Secret key for session management
SECRET_KEY=your-secret-key-here-change-in-production

# =============================================================================
# CLOUD CONFIGURATION
# =============================================================================

# AWS Configuration (for F1 instances)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-west-2

# Google Cloud Configuration (for TPUs)
GOOGLE_APPLICATION_CREDENTIALS=
GOOGLE_CLOUD_PROJECT=

# Azure Configuration (for FPGAs)
AZURE_CLIENT_ID=
AZURE_CLIENT_SECRET=
AZURE_TENANT_ID=

# =============================================================================
# MONITORING AND TELEMETRY
# =============================================================================

# Enable performance monitoring
ENABLE_MONITORING=false

# Prometheus metrics endpoint
PROMETHEUS_ENDPOINT=http://localhost:9090

# Enable usage telemetry (anonymized)
ENABLE_TELEMETRY=true

# Telemetry endpoint
TELEMETRY_ENDPOINT=https://telemetry.codesign-playground.com

# =============================================================================
# WEB INTERFACE CONFIGURATION
# =============================================================================

# Web server host and port
WEB_HOST=0.0.0.0
WEB_PORT=8000

# Enable CORS for web interface
ENABLE_CORS=true

# Allowed CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# =============================================================================
# JUPYTER CONFIGURATION
# =============================================================================

# Jupyter server port
JUPYTER_PORT=8888

# Enable Jupyter extensions
ENABLE_JUPYTER_EXTENSIONS=true

# Jupyter notebook directory
JUPYTER_NOTEBOOK_DIR=./notebooks

# =============================================================================
# LICENSING AND COMPLIANCE
# =============================================================================

# Enable license compliance checking
ENABLE_LICENSE_COMPLIANCE=true

# SPDX license identifier for generated code
GENERATED_CODE_LICENSE=Apache-2.0

# Enable SBOM generation
ENABLE_SBOM_GENERATION=false

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Enable result caching
ENABLE_CACHING=true

# Cache TTL in seconds
CACHE_TTL=3600

# Enable background task processing
ENABLE_BACKGROUND_TASKS=true

# Number of worker processes for background tasks
BACKGROUND_WORKER_COUNT=2

# =============================================================================
# EXPERIMENTAL FEATURES
# =============================================================================

# Enable experimental quantum computing integration
ENABLE_QUANTUM_INTEGRATION=false

# Enable experimental neuromorphic computing support
ENABLE_NEUROMORPHIC_SUPPORT=false

# Enable experimental automated verification
ENABLE_AUTO_VERIFICATION=false

# =============================================================================
# DOCUMENTATION AND HELP
# =============================================================================

# Documentation server URL
DOCS_URL=https://docs.codesign-playground.com

# Support contact information
SUPPORT_EMAIL=support@codesign-playground.com

# Community forum URL
COMMUNITY_URL=https://community.codesign-playground.com

# =============================================================================
# VERSION AND UPDATE CONFIGURATION
# =============================================================================

# Check for updates automatically
AUTO_UPDATE_CHECK=true

# Update channel (stable, beta, nightly)
UPDATE_CHANNEL=stable

# Current version (auto-populated by build system)
CODESIGN_PLAYGROUND_VERSION=0.1.0-dev