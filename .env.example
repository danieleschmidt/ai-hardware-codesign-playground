# AI Hardware Co-Design Playground - Environment Variables

# ======================
# Application Settings
# ======================

# Environment (development, staging, production)
ENVIRONMENT=development

# Application name and version
APP_NAME=ai-hardware-codesign-playground
APP_VERSION=0.1.0

# Debug mode (true/false)
DEBUG=true

# Secret key for cryptographic operations (generate with: python -c "import secrets; print(secrets.token_urlsafe(32))")
SECRET_KEY=your-secret-key-here

# ======================
# Database Configuration
# ======================

# Primary database URL
DATABASE_URL=postgresql://codesign_user:codesign_password@localhost:5432/codesign_playground

# Database connection pool settings
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600

# Redis cache URL
REDIS_URL=redis://localhost:6379/0

# Redis session store
REDIS_SESSION_URL=redis://localhost:6379/1

# ======================
# Web Server Configuration
# ======================

# Backend API server
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=4

# Frontend development server
FRONTEND_HOST=0.0.0.0
FRONTEND_PORT=3000

# CORS settings (comma-separated origins)
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:8080

# ======================
# Authentication & Security
# ======================

# JWT settings
JWT_SECRET_KEY=your-jwt-secret-key-here
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# OAuth providers (if using external authentication)
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret

# API rate limiting
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_BURST=20

# ======================
# Cloud Services
# ======================

# AWS Configuration
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_DEFAULT_REGION=us-west-2
AWS_S3_BUCKET=codesign-artifacts

# Azure Configuration
AZURE_CLIENT_ID=your-azure-client-id
AZURE_CLIENT_SECRET=your-azure-client-secret
AZURE_TENANT_ID=your-azure-tenant-id
AZURE_SUBSCRIPTION_ID=your-azure-subscription-id

# Google Cloud Configuration
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json
GCP_PROJECT_ID=your-gcp-project-id
GCP_REGION=us-central1

# ======================
# Container Registry
# ======================

# Docker registry for custom images
DOCKER_REGISTRY=ghcr.io
DOCKER_REGISTRY_USERNAME=your-github-username
DOCKER_REGISTRY_TOKEN=your-github-token

# ======================
# Message Queue & Task Processing
# ======================

# RabbitMQ or other message broker
BROKER_URL=pyamqp://guest:guest@localhost:5672//

# Celery result backend
CELERY_RESULT_BACKEND=redis://localhost:6379/2

# Task queue settings
CELERY_TASK_SERIALIZER=json
CELERY_ACCEPT_CONTENT=json
CELERY_RESULT_SERIALIZER=json
CELERY_TIMEZONE=UTC

# ======================
# Hardware Simulation
# ======================

# Verilator configuration
VERILATOR_ROOT=/usr/share/verilator
VERILATOR_BIN=/usr/bin/verilator

# ModelSim configuration (if available)
MODELSIM_BIN=/opt/modelsim/bin/vsim

# Vivado configuration (if available)
VIVADO_BIN=/opt/Xilinx/Vivado/2023.1/bin/vivado

# Quartus configuration (if available)
QUARTUS_BIN=/opt/intel/quartus/bin/quartus_sh

# ======================
# ML/AI Framework Configuration
# ======================

# TVM configuration
TVM_HOME=/opt/tvm
TVM_LIBRARY_PATH=/opt/tvm/build

# MLIR configuration
MLIR_HOME=/opt/mlir
MLIR_TOOLS=/opt/mlir/bin

# ONNX Runtime configuration
ORT_PROVIDERS=CPUExecutionProvider,CUDAExecutionProvider

# ======================
# Monitoring & Logging
# ======================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log format (json, text)
LOG_FORMAT=json

# Sentry for error tracking
SENTRY_DSN=your-sentry-dsn-here

# Prometheus metrics
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090

# Jaeger tracing
JAEGER_ENABLED=false
JAEGER_AGENT_HOST=localhost
JAEGER_AGENT_PORT=6831

# ======================
# File Storage
# ======================

# Local file storage
UPLOAD_DIR=./uploads
MAX_UPLOAD_SIZE=100MB

# Temporary file directory
TEMP_DIR=/tmp/codesign

# Design artifact storage
ARTIFACT_STORAGE_TYPE=local  # local, s3, azure, gcp
ARTIFACT_STORAGE_PATH=./artifacts

# ======================
# Development Tools
# ======================

# Testing configuration
PYTEST_TIMEOUT=300
COVERAGE_THRESHOLD=80

# Documentation
DOCS_HOST=0.0.0.0
DOCS_PORT=8080

# Jupyter configuration
JUPYTER_ENABLE_LAB=yes
JUPYTER_PORT=8888
JUPYTER_TOKEN=your-jupyter-token

# ======================
# Performance Settings
# ======================

# Worker process settings
WORKER_PROCESSES=4
WORKER_CONNECTIONS=1000
WORKER_TIMEOUT=120

# Cache settings
CACHE_TTL=3600
CACHE_MAX_ENTRIES=10000

# Simulation resource limits
MAX_SIMULATION_TIME=3600  # seconds
MAX_SIMULATION_MEMORY=8GB
MAX_CONCURRENT_SIMULATIONS=5

# ======================
# Feature Flags
# ======================

# Enable experimental features
ENABLE_EXPERIMENTAL_FEATURES=false

# Enable cloud deployment features
ENABLE_CLOUD_DEPLOYMENT=true

# Enable real-time collaboration
ENABLE_COLLABORATION=false

# Enable telemetry collection
ENABLE_TELEMETRY=true

# ======================
# Deployment Configuration
# ======================

# Container settings
CONTAINER_PORT=8000
CONTAINER_MEMORY_LIMIT=2g
CONTAINER_CPU_LIMIT=1000m

# Health check settings
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# ======================
# License & Compliance
# ======================

# License server (if using commercial tools)
LICENSE_SERVER=your-license-server

# Export control settings
EXPORT_CONTROL_ENABLED=false
RESTRICTED_COUNTRIES=CN,IR,KP,SY

# ======================
# Development Overrides
# ======================

# Skip certain checks in development
SKIP_AUTH_IN_DEV=false
SKIP_RATE_LIMITING=false
SKIP_EMAIL_VERIFICATION=true

# Mock external services
MOCK_CLOUD_SERVICES=false
MOCK_SYNTHESIS_TOOLS=false

# Development database
DEV_DATABASE_RESET=false